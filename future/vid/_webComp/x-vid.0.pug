template#xx-vid
	style.
		video {
			background: black;
		}

	#v1

script#sxv(type='text/x-dot-template').
	<video id="v1" src='{{=it.src}}' autoplay loop muted  width='360px' height='250px' >
	</video>

script.
	class VidEl extends HTMLElement {
		constructor() {
			super()
			this._shadowRoot = this.attachShadow({mode: 'open'})
			var t = document.querySelector('#xx-vid')// add the dom above
			var instance = t.content.cloneNode(true)
			this._shadowRoot.appendChild(instance)
		}//()
		attributeChangedCallback(attrName, oldValue, newVal) {
			this[attrName] = newVal
		}
		static get observedAttributes() {
			return ['src']
		}

		connectedCallback() {
			//var d = this.shadowRoot.querySelector('v1', this)//ctx
			var tpl1 = document.getElementById('sxv').text
			var tpl1Foo = doT.template(tpl1)
			var data = {'src': this.src}
			var res = tpl1Foo(data)
			//console.log(res)

			var d = this.shadowRoot.querySelector('#v1', this)//ctx
			d.innerHTML=res

			$('#v1', this).mediaelementplayer({
				features: ['fullscreen']
				,controlsTimeoutDefault: 100
				,controlsTimeoutMouseEnter: 100
				,controlsTimeoutMouseLeave: 100
				,stretching: 'fill'
				//,hideVideoControlsOnLoad: "true"
				,success: function(ply, originalNode) {
					ply.setCurrentTime(5.0)
					console.log('ok', ply.getCurrentTime ()	)
				}
			})

		}//()

		_kill() {
			var ply = $('#rmpLab')[0]
			if (!ply.paused) {
					ply.pause();	
			}
			ply.remove()
		}//()
	}//class
